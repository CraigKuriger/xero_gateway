{
  "name": "Xero gateway",
  "tagline": "Ruby wrapper for the Xero API",
  "body": "Xero API wrapper [![Build Status](https://travis-ci.org/xero-gateway/xero_gateway.svg?branch=master)](https://travis-ci.org/xero-gateway/xero_gateway) [![Gem Version](https://badge.fury.io/rb/xero_gateway.svg)](https://badge.fury.io/rb/xero_gateway)\r\n================\r\n\r\n# Getting Started\r\n\r\nThis is a Ruby gem for communicating with the Xero API.\r\nYou can find more information about the Xero API at <https://developer.xero.com>.\r\n\r\n## Installation\r\n\r\nJust add the `xero_gateway` gem to your Gemfile, like so:\r\n\r\n```ruby\r\n  gem 'xero_gateway'\r\n```\r\n\r\n## Usage\r\n\r\n```ruby\r\n  gateway = XeroGateway::Gateway.new(YOUR_OAUTH_CONSUMER_KEY, YOUR_OAUTH_CONSUMER_SECRET)\r\n```\r\n\r\n### Authenticating with OAuth\r\n\r\nThe Xero Gateway uses [OAuth 1.0a](https://oauth.net/core/1.0a/) for authentication. Xero Gateway\r\nimplements OAuth in a very similar manner to the [Twitter gem by John Nunemaker](http://github.com/jnunemaker/twitter)\r\n, so if you've used that before this will all seem familiar.\r\n\r\n  1. **Get a Consumer Key & Secret**\r\n\r\n    First off, you'll need to get a Consumer Key/Secret pair for your\r\n    application from Xero.\r\n    Head to <https://api.xero.com>, log in and then click My Applications\r\n    &gt; Add Application.\r\n\r\n    If you want to create a private application (that accesses your own Xero\r\n    account rather than your users), you'll need to generate an RSA keypair\r\n    and an X509 certificate. This can be done with OpenSSL as below:\r\n\r\n    ```\r\n      openssl genrsa –out privatekey.pem 1024\r\n      openssl req –newkey rsa:1024 –x509 –key privatekey.pem –out publickey.cer –days 365\r\n      openssl pkcs12 –export –out public_privatekey.pfx –inkey privatekey.pem –in publickey.cer\r\n    ```\r\n\r\n    On the right-hand-side of your application's page there's a box titled\r\n    \"OAuth Credentials\". Use the Key and Secret from this box in order to\r\n    set up a new Gateway instance.\r\n\r\n    (If you're unsure about the Callback URL, specify nothing - it will\r\n    become clear a bit later)\r\n\r\n  2. **Create a Xero Gateway in your App**\r\n\r\n    ```ruby\r\n      gateway = XeroGateway::Gateway.new(YOUR_OAUTH_CONSUMER_KEY, YOUR_OAUTH_CONSUMER_SECRET)\r\n    ```\r\n\r\n    or for Private applications\r\n\r\n    ```ruby\r\n      require 'xero_gateway'\r\n      gateway = XeroGateway::PrivateApp.new(YOUR_OAUTH_CONSUMER_KEY, YOUR_OAUTH_CONSUMER_SECRET, PATH_TO_YOUR_PRIVATE_KEY)\r\n    ```\r\n\r\n  3. **Creating a Request Token**\r\n\r\n    You'll then need to get a Request Token from Xero.\r\n\r\n    ```ruby\r\n      request_token = gateway.request_token\r\n    ```\r\n\r\n    You should keep this around - you'll need it to exchange for an Access\r\n    Token later. (If you're using Rails, this means storing it in the\r\n    session or something similar)\r\n\r\n    Next, you need to redirect your user to the authorization url for this\r\n    request token. In Rails, that looks something like this:\r\n\r\n    ```ruby\r\n      redirect_to request_token.authorize_url\r\n    ```\r\n\r\n    You may also provide a callback parameter, which is the URL within your\r\n    app the user will be redirected to. See next section for more\r\n    information on what parameters Xero sends with this request.\r\n\r\n    ```ruby\r\n      request_token = request_token(oauth_callback: \"https://yourapp.com/xero/callback\")\r\n      redirect_to request_token.authorize_url\r\n    ```\r\n\r\n  4. **Retrieving an Access Token**\r\n\r\n    If you've specified a Callback URL when setting up your application or\r\n    provided an oauth\\_callback parameter on your request token, your user\r\n    will be redirected to that URL with an OAuth Verifier as a GET\r\n    parameter. You can then exchange your Request Token for an Access Token\r\n    like this (assuming Rails, once again):\r\n\r\n    ```ruby\r\n      gateway.authorize_from_request(request_token.token, request_token.secret, oauth_verifier: params[:oauth_verifier])\r\n    ```\r\n\r\n    (If you haven't specified a Callback URL, the user will be presented\r\n    with a numeric verifier which they must copy+paste into your\r\n    application; see examples/oauth.rb for an example)\r\n\r\n    Now you can access Xero API methods:\r\n\r\n    ```ruby\r\n      gateway.get_contacts\r\n      # => #<XeroGateway::Response:0x007fd367181388 ...\r\n    ```\r\n\r\n### Storing Access Tokens\r\n\r\nYou can also store the Access Token/Secret pair so that you can access\r\nthe API without user intervention. Currently, these access tokens are\r\nonly valid for 30 minutes, and will raise a\r\n`XeroGateway::OAuth::TokenExpired` exception if you attempt to access the\r\nAPI beyond the token's expiry time.\r\n\r\n```ruby\r\n  access_token, access_secret = gateway.access_token\r\n```\r\n\r\nYou can authorize a `Gateway` instance later on using the\r\n`authorize_from_access` method:\r\n\r\n```ruby\r\n  gateway = XeroGateway::Gateway.new(XERO_CONSUMER_KEY, XERO_CONSUMER_SECRET)\r\n  gateway.authorize_from_access(your_stored_token.access_token, your_stored_token.access_secret)\r\n```\r\n\r\n## Examples\r\n\r\nOpen examples/oauth.rb and change CONSUMER\\_KEY and CONSUMER\\_SECRET to\r\nthe values for a Test OAuth Application in order to see an example of\r\nOAuth at work.\r\n\r\nIf you're working with Rails, a controller similar to this might come in\r\nhandy:\r\n\r\n```ruby\r\n  class XeroSessionsController < ApplicationController\r\n\r\n    before_action :get_xero_gateway\r\n\r\n    def new\r\n      session[:request_token]  = @xero_gateway.request_token.token\r\n      session[:request_secret] = @xero_gateway.request_token.secret\r\n\r\n      redirect_to @xero_gateway.request_token.authorize_url\r\n    end\r\n\r\n    def create\r\n      @xero_gateway.authorize_from_request(session[:request_token], session[:request_secret],\r\n                                           oauth_verifier: params[:oauth_verifier])\r\n\r\n      session[:xero_auth] = { access_token:   @xero_gateway.access_token.token,\r\n                              access_secret:  @xero_gateway.access_token.secret }\r\n\r\n      session.data.delete(:request_token)\r\n      session.data.delete(:request_secret)\r\n    end\r\n\r\n    def destroy\r\n      session.data.delete(:xero_auth)\r\n    end\r\n\r\n    private\r\n\r\n      def get_xero_gateway\r\n        @xero_gateway = XeroGateway::Gateway.new(YOUR_OAUTH_CONSUMER_KEY, YOUR_OAUTH_CONSUMER_SECRET)\r\n      end\r\n\r\n  end\r\n```\r\n\r\nNote that I'm just storing the Access Token + Secret in the session here\r\n- you could equally store them in the database if you felt like\r\nrefreshing them every 30 minutes ;)\r\n\r\n## API Methods\r\n\r\nYou can find a full listing of all implemented methods on [the wiki page](https://github.com/xero-gateway/xero_gateway/wiki/API-Methods).\r\n\r\n## Logging\r\n\r\nYou can specify a logger to use (so you can track down those tricky\r\nexceptions) by using:\r\n\r\n```ruby\r\n  gateway.logger = ActiveSupport::BufferedLogger.new(\"log_file_name.log\")\r\n```\r\n\r\nYour logger simply needs to respond to `info`.\r\n\r\n## Contributing\r\n\r\nWe welcome contributions, thanks for pitching in! :sparkles:\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Make sure you have some tests, and they pass! (`bundle exec rake`)\r\n4. Commit your changes (`git commit -am 'Added some feature'`)\r\n5. Push to the branch (`git push origin my-new-feature`)\r\n6. Create new Pull Request\r\n\r\nThis project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}